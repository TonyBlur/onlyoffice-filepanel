services:
  # Note: ONLYOFFICE Document Server (onlyoffice/documentserver) is intentionally NOT included
  # in this compose file. Please install the Document Server separately and set the
  # backend environment variable DOC_SERVER_URL to the browser-accessible URL of your
  # Document Server (for example: http://localhost:8080 or https://docs.example.com).
  #
  # Rationale: the editor HTML returned by the backend injects the Document Server URL
  # for the browser to load scripts from. If you run Document Server in a different
  # container/network, the container name (eg. http://docserver) may not be resolvable
  # by your browser. To avoid confusion we require users to deploy Document Server
  # (official repo: https://github.com/ONLYOFFICE/Docker-DocumentServer) and expose
  # a browser-accessible address, then configure DOC_SERVER_URL accordingly.

  backend:
    build: ./backend
    environment:
      # DOC_SERVER_URL must be reachable by the browser. The local onlyoffice/documentserver
      # container in this environment is mapped to host ports 80/443, so use http://localhost
      - DOC_SERVER_URL=http://localhost:8380
      # DOC_SERVER_INTERNAL is the in-network address (if backend needs to request the docserver from inside compose)
      - DOC_SERVER_INTERNAL=http://onlyoffice-documentserver:80
      # JWT secret used to sign editor config for OnlyOffice Document Server
      - DOC_SERVER_JWT_SECRET=hUQTo541dF2UjKzO56Ux9jHOD62csevJ
    ports:
      - "${BACKEND_EXTERNAL_PORT:-4000}:${BACKEND_INTERNAL_PORT:-4000}"
    volumes:
      - ${HOST_FILES_PATH:-files_data}:/app/data/files:rw
    networks:
      - onlyoffice-network

  frontend:
    build: ./frontend
    environment:
      - IN_DOCKER=1
      # Single place to set frontend external/internal ports. Change FRONTEND_EXTERNAL_PORT once to update mapping and HMR/WDS targets.
      - FRONTEND_EXTERNAL_PORT=${FRONTEND_EXTERNAL_PORT:-8390}
      - FRONTEND_INTERNAL_PORT=${FRONTEND_INTERNAL_PORT:-3000}
      # Single backend URL used by frontend (replaces VITE_BACKEND_URL and VITE_API_URL)
      - BACKEND_URL=${BACKEND_URL:-http://localhost:4000}
      # Expose CRA-compatible env so client code can read process.env.REACT_APP_BACKEND_URL
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:4000}
      # Webpack Dev Server (CRA) socket overrides â€” use host mapping
      - WDS_SOCKET_URL=ws://host.docker.internal:${FRONTEND_EXTERNAL_PORT}/ws
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=${FRONTEND_EXTERNAL_PORT}
      - WDS_SOCKET_PATH=/ws
    ports:
      - "${FRONTEND_EXTERNAL_PORT:-8390}:${FRONTEND_INTERNAL_PORT:-3000}"
    depends_on:
      - backend
    networks:
      - onlyoffice-network

volumes:
  files_data:
    driver: local

networks:
  onlyoffice-network:
    driver: bridge
